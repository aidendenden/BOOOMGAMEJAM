fileFormatVersion: 2
guid: ec5bdedea94df4746aee728b79beaa10
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: 11500000, guid: 9609af7d379ab104abd0109916bc70d5, type: 3}
  _prompt: This shader should have a tiled pattern, and all of its properties should
    be exposed in the editor
  _cached: "\nShader \"Custom/TiledPattern\" {\n    Properties {\n        _MainTex
    (\"Texture\", 2D) = \"white\" {}\n        _TileSizeX (\"Tile Size X\", Range(0,
    10)) = 1\n        _TileSizeY (\"Tile Size Y\", Range(0, 10)) = 1\n        _Color
    (\"Color\", Color) = (1,1,1,1)\n    }\n \n    SubShader {\n        Tags {\"Queue\"=\"Transparent\"
    \"RenderType\"=\"Opaque\"}\n        LOD 100\n \n        Pass {\n            CGPROGRAM\n           
    #pragma vertex vert\n            #pragma fragment frag\n            #include
    \"UnityCG.cginc\"\n     \n            struct appdata {\n                float4
    vertex : POSITION;\n                float2 uv : TEXCOORD0;\n            };\n    
    \n            struct v2f {\n                float2 uv : TEXCOORD0;\n               
    float4 vertex : SV_POSITION;\n            };\n     \n            sampler2D _MainTex;\n           
    float _TileSizeX;\n            float _TileSizeY;\n            fixed4 _Color;\n    
    \n            v2f vert (appdata v) {\n                v2f o;\n               
    o.vertex = UnityObjectToClipPos(v.vertex);\n                o.uv = v.uv;\n               
    return o;\n            }\n     \n            fixed4 frag (v2f i) : SV_Target
    {\n                float2 uv = i.uv * float2(_TileSizeX, _TileSizeY);\n               
    uv = uv - floor(uv);\n                fixed4 col = tex2D(_MainTex, uv);\n               
    col.rgb *= _Color.rgb;\n                col.a *= _Color.a;\n                return
    col;\n            }\n            ENDCG\n        }\n    }\n}\n"
